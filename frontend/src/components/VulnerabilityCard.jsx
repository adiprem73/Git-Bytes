import React, { useState } from 'react';

const VulnerabilityCard = ({ title, score, icon, items }) => {
  const [expanded, setExpanded] = useState(false);

  // Check if items are objects
  const isObjectItems = items.length > 0 && typeof items[0] === 'object';

  return (
    <div className="bg-[#1E1E1E] rounded-lg border border-gray-800 overflow-hidden">
      {/* Clickable header */}
      <div className="p-5 cursor-pointer" onClick={() => setExpanded(!expanded)}>
        <div className="flex justify-between items-center">
          <div className="flex items-center">
            {/* Icon */}
            <i className={`fas fa-${icon} text-[#00FF9D] mr-3 text-xl`}></i>
            {/* Title */}
            <h3 className="text-lg font-semibold">{title}</h3>
          </div>
          <div className="flex items-center">
            {/* Score badge */}
            {score && (
              <div
              className={`${
                score >= 8 ? 'bg-green-500' : score >= 6 ? 'bg-yellow-500' : 'bg-red-500'
                } text-black font-bold py-1 px-3 rounded-full text-xs mr-3`}
                >
              {score} / 10
            </div>
            )}
            {/* Expand/collapse button */}
            <button className="text-gray-400 hover:text-white">
              <i className={`fas fa-chevron-${expanded ? 'up' : 'down'}`}></i>
            </button>
          </div>
        </div>

        {/* Items list */}
        <div className="mt-4">
          {items && items.length > 0 ? (
            isObjectItems ? (
              items.map((item, index) => (
                <p key={index} className="text-sm text-gray-300">
                  {item.text || item.issue || 'No issue provided'}
                </p>
              ))
            ) : (
              items.map((item, index) => (
                <p key={index} className="text-sm text-red-400">
                  âš  {item}
                </p>
              ))
            )
          ) : (
            <p className="text-sm text-gray-500">No items available</p>
          )}
        </div>
      </div>

      {/* Expanded table */}
      {expanded && isObjectItems && (
        <div className="px-5 pb-5 border-t border-gray-800 pt-3">
          <table className="w-full text-sm">
            <thead>
              <tr className="text-gray-400 border-b border-gray-800">
                <th className="text-left pb-2">Severity</th>
                <th className="text-left pb-2">Issue</th>
                <th className="text-left pb-2">Location</th>
              </tr>
            </thead>
            <tbody>
              {items.map((item, index) => (
                <tr key={index} className={index < items.length - 1 ? 'border-b border-gray-800' : ''}>
                  <td className="py-2">
                    <span
                      className={`${
                        item.status === 'safe'
                          ? 'text-green-500'
                          : item.status === 'warning'
                          ? 'text-yellow-500'
                          : 'text-red-500'
                      }`}
                    >
                      {item.status === 'safe'
                        ? 'ðŸŸ¢ Safe'
                        : item.status === 'warning'
                        ? 'ðŸŸ¡ Medium'
                        : 'ðŸ”´ High'}
                    </span>
                  </td>
                  <td className="py-2">{item.issue}</td>
                  <td className="py-2 font-mono text-xs">{item.location}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
    </div>
  );
};

export default VulnerabilityCard;